# baseURI: http://steveray.com/alps
# imports: http://datashapes.org/dash
# prefix: alps

@prefix alps: <http://steveray.com/alps#> .
@prefix dash: <http://datashapes.org/dash#> .
@prefix graphql: <http://datashapes.org/graphql#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

<http://steveray.com/alps>
  a owl:Ontology ;
  owl:imports <http://datashapes.org/dash> ;
  owl:versionInfo "Created with TopBraid Composer" ;
  sh:declare alps:PrefixDeclaration ;
.
alps:AddCheckpoint
  a dash:SPARQLUpdateSuggestionGenerator ;
  rdfs:label "Suggest adding a checkpoint" ;
  sh:update """DELETE {
    
}
INSERT {
    ?this <http://steveray.com/alps#alps:hasCheckpoint> TRUE .
}
WHERE {
    
}""" ;
.
alps:Await
  a owl:Class ;
  a sh:NodeShape ;
  rdfs:subClassOf alps:EventDriven ;
.
alps:Decomposable
  a owl:Class ;
  a sh:NodeShape ;
  rdfs:subClassOf alps:Task ;
  sh:property [
      a sh:PropertyShape ;
      sh:path alps:callsOutSubPlan ;
      sh:maxCount 1 ;
      sh:minCount 1 ;
    ] ;
.
alps:Delay
  a owl:Class ;
  a sh:NodeShape ;
  rdfs:subClassOf alps:Timed ;
  sh:property [
      a sh:PropertyShape ;
      sh:path alps:hasDuration ;
      sh:maxCount 1 ;
      sh:minCount 1 ;
    ] ;
.
alps:EndPlan
  a owl:Class ;
  a sh:NodeShape ;
  rdfs:label "EndPlan" ;
  rdfs:subClassOf alps:SinglePredecessor ;
  sh:not [
      rdfs:label "Instance of name" ;
      sh:class alps:NonBranching ;
    ] ;
  sh:not [
      rdfs:label "Instance of name" ;
      sh:class alps:NonBranching ;
    ] ;
  sh:not [
      rdfs:label "Instance of name" ;
      sh:class alps:ParameterizedSplit ;
    ] ;
  sh:not [
      rdfs:label "Instance of name" ;
      sh:class alps:ParameterizedSplit ;
    ] ;
  sh:not [
      rdfs:label "Instance of name" ;
      sh:class alps:Return ;
    ] ;
  sh:not [
      rdfs:label "Instance of name" ;
      sh:class alps:Return ;
    ] ;
.
alps:EventDriven
  a owl:Class ;
  a sh:NodeShape ;
  rdfs:subClassOf alps:Synchronization ;
.
alps:Information
  a owl:Class ;
  a sh:NodeShape ;
  rdfs:subClassOf alps:NonBranching ;
  sh:property [
      a sh:PropertyShape ;
      sh:path alps:invokesCommand ;
      sh:minCount 1 ;
    ] ;
.
alps:Join
  a owl:Class ;
  a sh:NodeShape ;
  rdfs:label "Join" ;
  rdfs:subClassOf alps:SingleSuccessor ;
  sh:property [
      a sh:PropertyShape ;
      sh:path alps:isPrecededBy ;
      sh:class alps:SingleSuccessor ;
      sh:minCount 2 ;
    ] ;
.
alps:Lock
  a owl:Class ;
  a sh:NodeShape ;
  rdfs:subClassOf alps:Timed ;
.
alps:Node
  a owl:Class ;
  a sh:NodeShape ;
  rdfs:label "Node" ;
  rdfs:subClassOf owl:Thing ;
  sh:property [
      a sh:PropertyShape ;
      sh:path alps:hasCheckpoint ;
      dash:suggestionGenerator alps:AddCheckpoint ;
      sh:datatype xsd:boolean ;
      sh:maxCount 1 ;
      sh:minCount 1 ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path alps:hasNodeName ;
      sh:maxCount 1 ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path alps:hasNodeNumber ;
      sh:maxCount 1 ;
      sh:minCount 1 ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path alps:isPartOf ;
      sh:class alps:Plan ;
      sh:maxCount 1 ;
      sh:minCount 1 ;
    ] ;
.
alps:NonBranching
  a owl:Class ;
  a sh:NodeShape ;
  rdfs:label "NonBranching" ;
  rdfs:subClassOf alps:SinglePredecessor ;
  rdfs:subClassOf alps:SingleSuccessor ;
  sh:not [
      rdfs:label "Instance of name" ;
      sh:class alps:EndPlan ;
    ] ;
  sh:not [
      rdfs:label "Instance of name" ;
      sh:class alps:EndPlan ;
    ] ;
  sh:not [
      rdfs:label "Instance of name" ;
      sh:class alps:Join ;
    ] ;
  sh:not [
      rdfs:label "Instance of name" ;
      sh:class alps:Join ;
    ] ;
  sh:not [
      rdfs:label "Instance of name" ;
      sh:class alps:ParameterizedSplit ;
    ] ;
  sh:not [
      rdfs:label "Instance of name" ;
      sh:class alps:ParameterizedSplit ;
    ] ;
  sh:not [
      rdfs:label "Instance of name" ;
      sh:class alps:Return ;
    ] ;
  sh:not [
      rdfs:label "Instance of name" ;
      sh:class alps:Return ;
    ] ;
  sh:not [
      rdfs:label "Instance of name" ;
      sh:class alps:StartPlan ;
    ] ;
  sh:not [
      rdfs:label "Instance of name" ;
      sh:class alps:StartPlan ;
    ] ;
.
alps:ParameterizedSplit
  a owl:Class ;
  a sh:NodeShape ;
  rdfs:label "ParameterizedSplit" ;
  rdfs:subClassOf alps:SinglePredecessor ;
  sh:property [
      a sh:PropertyShape ;
      sh:path alps:hasM-Number ;
      sh:maxCount 1 ;
      sh:minCount 1 ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path alps:hasTiming ;
      sh:maxCount 1 ;
      sh:minCount 1 ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path alps:isSucceededBy ;
      sh:class alps:SinglePredecessor ;
      sh:minCount 2 ;
    ] ;
.
alps:Plan
  a owl:Class ;
  a sh:NodeShape ;
  rdfs:label "Plan" ;
  rdfs:subClassOf owl:Thing ;
  sh:property [
      a sh:PropertyShape ;
      sh:path alps:contains ;
      sh:class alps:Node ;
      sh:minCount 1 ;
      sh:name "contains" ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path alps:hasPlanComment ;
      sh:maxCount 1 ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path alps:hasPlanId ;
      sh:maxCount 1 ;
      sh:minCount 1 ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path alps:hasPlanVersion ;
      sh:maxCount 1 ;
      sh:minCount 1 ;
    ] ;
.
alps:PlanUniqueIdentifierConstraint
  a sh:NodeShape ;
  rdfs:label "Joint uniqueness constraint for PlanId and PlanVersion" ;
  sh:sparql [
      rdfs:comment "Enforces the joint uniqueness of planId and planVersion for a plan instance." ;
      sh:message "Plan  '{?other}'  already has a planId of  '{?planId}'  and planVersion of  '{?planVersion}' . The combination must be unique." ;
      sh:prefixes <http://steveray.com/alps> ;
      sh:select """SELECT ?this ?other ?planId ?planVersion
WHERE {
    ?this alps:hasPlanId ?planId .
?this alps:hasPlanVersion ?planVersion .
?other alps:hasPlanId ?planId .
?other alps:hasPlanVersion ?planVersion .
FILTER (?other != ?this) .
}""" ;
    ] ;
  sh:targetClass alps:Plan ;
.
alps:PredicatedSplit
  a owl:Class ;
  a sh:NodeShape ;
  rdfs:label "PredicatedSplit" ;
  rdfs:subClassOf alps:ParameterizedSplit ;
.
alps:PrefixDeclaration
  a sh:PrefixDeclaration ;
  sh:namespace "http://steveray.com/alps#"^^xsd:anyURI ;
  sh:prefix "alps" ;
.
alps:Primitive
  a owl:Class ;
  a sh:NodeShape ;
  rdfs:subClassOf alps:Task ;
  sh:property [
      a sh:PropertyShape ;
      sh:path alps:isDefinedBy ;
      sh:maxCount 1 ;
      sh:minCount 1 ;
    ] ;
.
alps:Rendezvous
  a owl:Class ;
  a sh:NodeShape ;
  rdfs:subClassOf alps:EventDriven ;
.
alps:Resource
  a owl:Class ;
  a sh:NodeShape ;
  rdfs:subClassOf alps:NonBranching ;
  sh:property [
      a sh:PropertyShape ;
      sh:path alps:hasAllocationRole ;
      sh:maxCount 1 ;
      sh:minCount 1 ;
    ] ;
.
alps:ResourceBinding
  a owl:Class ;
  a sh:NodeShape ;
  rdfs:subClassOf alps:NonBranching ;
  sh:property [
      a sh:PropertyShape ;
      sh:path alps:bindsVariable ;
      sh:maxCount 1 ;
      sh:minCount 1 ;
    ] ;
.
alps:Return
  a owl:Class ;
  a sh:NodeShape ;
  rdfs:label "Return" ;
  rdfs:subClassOf alps:SinglePredecessor ;
  sh:not [
      rdfs:label "Instance of name" ;
      sh:class alps:EndPlan ;
    ] ;
  sh:not [
      rdfs:label "Instance of name" ;
      sh:class alps:EndPlan ;
    ] ;
  sh:not [
      rdfs:label "Instance of name" ;
      sh:class alps:NonBranching ;
    ] ;
  sh:not [
      rdfs:label "Instance of name" ;
      sh:class alps:NonBranching ;
    ] ;
  sh:not [
      rdfs:label "Instance of name" ;
      sh:class alps:ParameterizedSplit ;
    ] ;
  sh:not [
      rdfs:label "Instance of name" ;
      sh:class alps:ParameterizedSplit ;
    ] ;
.
alps:Signal
  a owl:Class ;
  a sh:NodeShape ;
  rdfs:subClassOf alps:EventDriven ;
.
alps:SinglePredecessor
  a owl:Class ;
  a sh:NodeShape ;
  rdfs:label "SinglePredecessor" ;
  rdfs:subClassOf alps:Node ;
  sh:property [
      a sh:PropertyShape ;
      sh:path alps:isPrecededBy ;
      sh:class alps:Node ;
      sh:maxCount 1 ;
      sh:minCount 1 ;
    ] ;
.
alps:SingleSuccessor
  a owl:Class ;
  a sh:NodeShape ;
  rdfs:label "SingleSuccessor" ;
  rdfs:subClassOf alps:Node ;
  sh:property [
      a sh:PropertyShape ;
      sh:path alps:isSucceededBy ;
      sh:class alps:Node ;
      sh:maxCount 1 ;
      sh:minCount 1 ;
    ] ;
.
alps:StartPlan
  a owl:Class ;
  a sh:NodeShape ;
  rdfs:label "StartPlan" ;
  rdfs:subClassOf alps:SingleSuccessor ;
  sh:not [
      rdfs:label "Instance of name" ;
      sh:class alps:Join ;
    ] ;
  sh:not [
      rdfs:label "Instance of name" ;
      sh:class alps:Join ;
    ] ;
  sh:not [
      rdfs:label "Instance of name" ;
      sh:class alps:NonBranching ;
    ] ;
  sh:not [
      rdfs:label "Instance of name" ;
      sh:class alps:NonBranching ;
    ] ;
.
alps:Synchronization
  a owl:Class ;
  a sh:NodeShape ;
  rdfs:subClassOf alps:NonBranching ;
.
alps:Task
  a owl:Class ;
  a sh:NodeShape ;
  rdfs:subClassOf alps:NonBranching ;
  sh:property [
      a sh:PropertyShape ;
      sh:path alps:hasDuration ;
      sh:maxCount 1 ;
      sh:minCount 1 ;
    ] ;
.
alps:Timed
  a owl:Class ;
  a sh:NodeShape ;
  rdfs:subClassOf alps:Synchronization ;
.
alps:TimedWait
  a owl:Class ;
  a sh:NodeShape ;
  rdfs:subClassOf alps:Timed ;
  sh:property [
      a sh:PropertyShape ;
      sh:path alps:atTime ;
      sh:maxCount 1 ;
      sh:minCount 1 ;
    ] ;
.
alps:Unlock
  a owl:Class ;
  a sh:NodeShape ;
  rdfs:subClassOf alps:Timed ;
.
alps:atTime
  a owl:DatatypeProperty ;
  rdfs:range xsd:dateTime ;
.
alps:bindsVariable
  a owl:DatatypeProperty ;
.
alps:callsOutSubPlan
  a owl:ObjectProperty ;
.
alps:contains
  a owl:ObjectProperty ;
  rdfs:label "Test Property" ;
.
alps:hasAllocationRole
  a owl:DatatypeProperty ;
.
alps:hasCheckpoint
  a owl:DatatypeProperty ;
  rdfs:label "hasCheckpoint" ;
.
alps:hasDuration
  a owl:DatatypeProperty ;
  rdfs:range xsd:time ;
.
alps:hasM-Number
  a owl:DatatypeProperty ;
  rdfs:range xsd:integer ;
.
alps:hasNodeName
  a owl:DatatypeProperty ;
  rdfs:label "hasNodeName" ;
  rdfs:range xsd:string ;
.
alps:hasNodeNumber
  a owl:DatatypeProperty ;
  rdfs:label "hasNodeNumber" ;
  rdfs:range xsd:integer ;
.
alps:hasPlanComment
  a owl:DatatypeProperty ;
  rdfs:label "hasPlanComment" ;
  rdfs:range xsd:string ;
.
alps:hasPlanId
  a owl:DatatypeProperty ;
  rdfs:label "hasPlanId" ;
  rdfs:range xsd:string ;
.
alps:hasPlanVersion
  a owl:DatatypeProperty ;
  rdfs:label "hasPlanVersion" ;
  rdfs:range xsd:float ;
.
alps:hasTiming
  a rdf:Property ;
.
alps:invokesCommand
  a rdf:Property ;
.
alps:isDefinedBy
  a owl:DatatypeProperty ;
.
alps:isPartOf
  a owl:FunctionalProperty ;
  rdfs:label "isPartOf" ;
.
alps:isPrecededBy
  a rdf:Property ;
.
alps:isSucceededBy
  a rdf:Property ;
.
